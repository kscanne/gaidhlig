#!/usr/bin/perl

use strict;
use warnings;
use Lingua::GD::Gramadoir;

binmode STDIN, ":bytes";
binmode STDOUT, ":utf8";
binmode STDERR, ":utf8";

my $gr = new Lingua::GD::Gramadoir(
	fix_spelling => 1,
	input_encoding => 'utf-8',
);

sub correct_error
{
	(my $err) = @_;
	(my $msg, my $arg, my $text) = $err =~ m/^<E msg="([A-Z]+)(?:{([^}]+)})?">(.*)<\/E>$/;
print STDERR "$err\n";
	$text =~ s/<[^>]+>//g;
	if ($msg eq 'BACHOIR') {
		if ($text =~ m/^[Aa] / or $arg eq 'dhan') {
			$text = $arg;    # dhan, a-mach, a-nis
		}
		elsif ($text =~ m/ .* /) {  # 3 words => replace middle
			$text =~ s/ ([^ ]+) / $arg /;
		}
		else {  # replace first word by default
			$text =~ s/^([^ ]+) /$arg /;
		}
	}
	elsif ($msg eq 'PREFIXH') {
		$text =~ s/ / h-/;
	}
	elsif ($msg eq 'PREFIXT') {
		$text =~ s/ / t-/;
	}
	elsif ($msg eq 'SEIMHIU') {
		$text =~ s/ (.)/ $1h/;
	}
	return $text;
}


local $/;
$_ = <STDIN>;
my $xml = $gr->xml_stream($_);
$xml =~ s/(<E[^>]+>.*?<\/E>)/correct_error($1);/eg;
$xml =~ s/<[^>]+>//g;
$xml =~ s/\n /\n/g;
$xml =~ s/ \n/\n/g;
$xml =~ s/&quot;/"/g;
$xml =~ s/&lt;/</g;
$xml =~ s/&gt;/>/g;
$xml =~ s/&amp;/&/g;

$xml =~ s/^\n\n\n//;  # where XML header used to be
$xml =~ s/\n$//;

print $xml;

exit 0;
